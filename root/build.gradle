plugins {
    id 'java'
    id 'signing'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.22.0'
    id("maven-publish")
}

signing {
    useGpgCmd()
}

allprojects {
    group 'io.github.karlatemp'
    version '1.2.2'
    repositories {
        mavenCentral()
    }
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compileOnly project(':accessor')
    compile project(':java8')
    compile project(':java9')
    compile fileTree(file('../impl8/dist'))
    compile fileTree(file('../ojdk11/dist'))
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from('java8/src/main/java')
    from('java9/src/main/java')
    from('../impl8/src/main/java') {
        exclude '**/Unsafe.java'
    }
    from('../ojdk11/src/main/java') {
        exclude '**/Unsafe.java'
    }
    from(sourceSets.main.allSource)

}

bintray {
    user = project.findProperty("bintray.user") ?: System.getenv("USERNAME")
    println("user is $user")
    key = project.findProperty('bintray.key') ?: System.getenv("TOKEN")

    override = true
    publish = true

    publications = ['mavenPublication']

    pkg {
        repo = 'unsafe-accessor'
        name = 'unsafe-accessor'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Karlatemp/UnsafeAccessor.git'
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            pom {
                name = 'Unsafe Accessor'
                description = 'Unsafe accessing library'
                url = 'https://github.com/Karlatemp/UnsafeAccessor'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
            }
            pom.withXml {
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                    true
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
    }
}

extraArchive {
    sources = false
    tests = false
    javadoc = true
}


modifyPom {
    project {
        name = 'Unsafe Accessor'
        description = 'Unsafe accessing library'
        url = 'https://github.com/Karlatemp/UnsafeAccessor'
        licenses {
            license {
                name = 'MIT License'
                url = 'https://spdx.org/licenses/MIT.html'
            }
        }
    }
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}

nexusStaging {
    packageGroup = "io.github.karlatemp" //optional if packageGroup == project.getGroup()
    stagingProfileId = "io.github.karlatemp" //when not defined will be got from server using "packageGroup"
}
