plugins {
    id 'java'
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from(project(':api').sourceSets.main.allSource)
    from(project(':impl.jdk8').sourceSets.main.allSource)
    from(project(':impl.jdk9').sourceSets.main.allSource)
    from(project(':impl.jdk17').sourceSets.main.allSource)
    from(project.sourceSets.main.allSource)
}

dependencies {
    implementation(project(':api'))

    implementation(files(new File(project(':impl.jdk8').buildDir, "classes/java/main")))
    implementation(files(new File(project(':impl.jdk9').buildDir, "classes/java/main")))
    implementation(files(new File(project(':impl.jdk17').buildDir, "classes/java/main")))
    implementation(files("generated"))

    // https://mvnrepository.com/artifact/org.ow2.asm/asm
    testImplementation group: 'org.ow2.asm', name: 'asm', version: '9.2'
    testImplementation group: 'org.ow2.asm', name: 'asm-commons', version: '9.2'
    testImplementation group: 'org.ow2.asm', name: 'asm-util', version: '9.2'
    testImplementation group: 'org.ow2.asm', name: 'asm-tree', version: '9.2'

}

tasks.findByName("compileJava").mustRunAfter(":impl.codegen:runCodeGen")
